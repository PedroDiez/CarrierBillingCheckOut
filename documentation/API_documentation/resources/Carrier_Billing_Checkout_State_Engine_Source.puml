@startuml Purchase lifecycle

State fork <<fork>>
State end3 <<end>>

[*] -> initialising: Purchase Triggering (createPurchase)
initialising: Payment Triggering

initialising --> fork
fork: separation between one or two steps payment

note right of fork: Distinction between 1 step(1S)\nor 2 steps (2S) payment.\nResponse may be provided\nsynchronously or asynchronously.\nCurrent Model based on 2 steps payment

fork --> succeeded : (1S) payment\nsuccessfully executed
fork -left-> failed : (1S)/(2S) Payment request\ndenied by carrier
fork --> ready_to_confirm : (2S) payment preparation\nsuccessfully executed

succeeded --> [*]


ready_to_confirm -down-> cancelled : (2S) Request to cancel payment\nsuccessfully executed\nor payment reservation expired
ready_to_confirm -> succeeded : (2S) Payment confirmation\nsuccessfully executed
ready_to_confirm -> failed : (2S)  confirmation\nrequest denied by carrier

failed -up-> end3

succeeded: Amount has been charged\non customer line
ready_to_confirm: Payment is prepared &\nready to be confirmed.\nAmount is reserved
cancelled: Payment is cancelled\nAmount is released
failed: Payment request is denied\nby backend server

cancelled --> [*]

@enduml
